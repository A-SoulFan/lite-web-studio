# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI Build


on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
#     - run: ls -a ./src/styles/
#     - run: mv ./src/styles/SongFilter.scss ./src/styles/songfilter.scss && mv ./src/styles/SongListPagination.scss ./src/styles/songListpagination.scss
#     - run: ls -a ./src/styles/

    - run: npm ci
    - run: npm run build
    - run: npm test

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.HK_CMI_SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.HK_CMI_SSH_HOST_IP }} >> ~/.ssh/known_hosts
    - name: Deploy with rsync
      run: rsync -avz ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.HK_CMI_SSH_HOST_IP }}:/www/wwwroot/dev.music.a-soul.fans/dist/


    # - name: Use tar to zip dist files
    #   run: tar -cf dist.zip dist

#     - name: Create new release
#       uses: actions/create-release@v1
#       id: create_release
#       with:
#         draft: false
#         prerelease: false
#         release_name: build_$TIME
#         tag_name: $TIME
#         body: Release build zip for $TIME
#       env:
#         GITHUB_TOKEN: ${{ github.token }}

#     - name: Upload assets
#       uses: actions/upload-release-asset@v1
#       env:
#           GITHUB_TOKEN: ${{ github.token }}
#       with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: dist.zip
#          asset_name: dist.zip
#          asset_content_type: application/zip
