# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release Branch Node.js CI Build Frontend


on:
  push:
    branches: [release]
  pull_request:
    branches: [release]
  workflow_dispatch:

jobs:
  build:
    runs-on: Windows-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Delete last release
      uses: ame-yu/action-delete-latest-release@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - run: npm ci
    - run: npm run build
    - run: npm test
    - name: Use tar to zip dist files
      run: tar -cf dist.zip dist

    # - name: Remove old release
    #   uses: actions/create-release@v1
    #   id: create_release
    #   with:
    #     draft: false
    #     prerelease: false
    #     release_name: Latest
    #     tag_name: Latest
    #     body: Release Latest
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}

    - name: Create new release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Latest
        tag_name: Latest
        body: Release Latest
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload assets
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: dist.zip
         asset_name: dist.zip
         asset_content_type: application/zip


  deploy:
    runs-on: [self-hosted,linux,X64,hk]
    needs: build
    steps:
    - run: cd /home/coderunner/dev.music
    - run: wget https://github.do/https://github.com/oldking139/lite-web-studio/releases/download/Latest/dist.zip
    - run: unzip dist.zip